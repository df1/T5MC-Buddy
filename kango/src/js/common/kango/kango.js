/*
Built using Kango - Cross-browser extension framework.
http://kangoextensions.com/
*/
function KangoExtensionInfo(){this.name='';this.description='';this.version='';this.background_scripts=[];this.content_scripts=[];this.browser_button={};}
function KangoNotImplementedException(methodName){methodName=methodName?methodName+' ':'';this.prototype=Error.prototype;this.name='KangoNotImplementedException';this.message='Method '+methodName+'is not implemented';this.toString=function(){return this.name+': '+this.message;};}
var kango={_eventTarget:new KangoEventTarget(),_configFileName:'extension_info.json',_extensionInfo:null,_messageRouter:null,_modules:[],_loadExtensionInfo:function(){this._extensionInfo=JSON.parse(kango.io.getExtensionFileContents(this._configFileName));},_init:function(){this._loadExtensionInfo();var self=this;this._messageRouter=new KangoMessageRouter();this._messageRouter.onmessage=function(event){self._eventTarget.fireEvent(self.event.Message,event);};this.dispatchMessage=function(name,data){this._messageRouter.dispatchMessage(name,data);};for(var i=0;i<this._modules.length;i++){(new this._modules[i]()).init(kango);}
return this._eventTarget.fireEvent(this.event.Ready);},event:{Ready:'Ready',Message:'message',Uninstall:'Uninstall'},addModule:function(classObj){this._modules.push(classObj);},addEventListener:function(name,callback){return this._eventTarget.addEventListener(name,callback);},removeEventListener:function(name,callback){return this._eventTarget.removeEventListener(name,callback);},fireEvent:function(type,obj){return this._eventTarget.fireEvent(type,obj);},getExtensionInfo:function(){return this._extensionInfo;},SCHEME:'kango-extension://'};kango.string={format:function(str,params){for(var i=1;i<arguments.length;i++){str=str.replace('{'+(i-1)+'}',arguments[i].toString());}
return str;}};kango.array={filter:function(array,regexp){var len=array.length;var res=new Array();for(var i=0;i<len;i++){if(i in array){var val=array[i];if(regexp.test(val)){res.push(val);}}}
return res;}};kango.oop={extend:function(base,props){var F=function(){};F.prototype=base.prototype;var result=new F();result.superclass=base;this.mixin(result,props);return result;},mixin:function(base,props){for(var k in props){if(props.hasOwnProperty(k)){base[k]=props[k];}}}};